{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","href","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LA8FeA,MA1Ff,WACE,IAAMC,EAAY,CAClB,CACCC,aAAc,yBACdC,cAAe,CACd,CAAEC,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,QAASC,WAAW,KAGpC,CACCH,aAAc,eACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,KAGhC,CACCH,aAAc,sCACdC,cAAe,CACd,CAAEC,WAAY,4BAA6BC,WAAW,GACtD,CAAED,WAAY,kBAAmBC,WAAW,GAC5C,CAAED,WAAY,2BAA4BC,WAAW,GACrD,CAAED,WAAY,mBAAoBC,WAAW,KAG/C,CACCH,aAAc,mBACdC,cAAe,CACd,CAAEC,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,MAAOC,WAAW,GAChC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,OAAQC,WAAW,KAGjC,CACDH,aAAc,eACdC,cAAe,CACd,CAAEC,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,KAAMC,WAAW,GAC/B,CAAED,WAAY,MAAOC,WAAW,MAIlC,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACD,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAcC,OACE,qBAAKC,UAAU,MAAf,SACAJ,EACA,sBAAKI,UAAU,gBAAf,wBACaF,EADb,WAC4BV,EAAUa,OAChC,iCAAQ,mBAAGC,KAAK,kCAAR,4BAGd,qCACC,sBAAKF,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,6CAAgBN,EAAkB,KADnC,IAC8CN,EAAUa,UAExD,qBAAKD,UAAU,gBAAf,SAAgCZ,EAAUM,GAAiBL,kBAE5D,qBAAKW,UAAU,iBAAf,SACEZ,EAAUM,GAAiBJ,cAAca,KAAI,SAACC,GAAD,OAC7C,wBAAQC,QAAS,kBA9BS,SAACb,GAC5BA,GACHO,EAASD,EAAQ,GAGlB,IAAMQ,EAAeZ,EAAkB,EACnCY,EAAelB,EAAUa,OAC5BN,EAAmBW,GAEnBT,GAAa,GAqBcU,CAAwBH,EAAaZ,YAA5D,SAAyEY,EAAab,wBCvE9EiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.67e0d526.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const questions = [\n\t\t{\n\t\t\tquestionText: \"What is my dog's name?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Fido', isCorrect: false },\n\t\t\t\t{ answerText: 'Maggie', isCorrect: true },\n\t\t\t\t{ answerText: 'Spot', isCorrect: false },\n\t\t\t\t{ answerText: 'Bella', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is 2+2?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '4', isCorrect: true },\n\t\t\t\t{ answerText: '5', isCorrect: false },\n\t\t\t\t{ answerText: '3', isCorrect: false },\n\t\t\t\t{ answerText: '9', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Why did the chicken cross the road?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Because he wanted takeout', isCorrect: false },\n\t\t\t\t{ answerText: 'Because 7 ate 9', isCorrect: false },\n\t\t\t\t{ answerText: 'To get to the other side', isCorrect: true },\n\t\t\t\t{ answerText: 'To catch his cab', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is my name?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Anthony', isCorrect: true },\n\t\t\t\t{ answerText: 'Joe', isCorrect: false },\n\t\t\t\t{ answerText: 'John', isCorrect: false },\n\t\t\t\t{ answerText: 'Matt', isCorrect: false },\n\t\t\t],\n\t\t},\n    {\n\t\t\tquestionText: \"What is 4x9?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '32', isCorrect: false },\n\t\t\t\t{ answerText: '35', isCorrect: false },\n\t\t\t\t{ answerText: '36', isCorrect: true },\n\t\t\t\t{ answerText: '512', isCorrect: false },\n\t\t\t],\n\t\t},\n\t];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst handleAnswerOptionClick = (isCorrect: any) => {\n\t\tif (isCorrect) {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n  \n  return (\n    <div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n          <button><a href=\"https://ajrac.github.io/quizv2/\">Try Again</a></button>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}